// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OrderItems{
  id String  @id @default(uuid())
  orderId String //fk
  orders Orders @relation(fields: [orderId],references: [id])
  quantity Int 
  price Int
  discount Int?
  createdAt DateTime 
  productVariantId String//fk
  productVariant ProductVariant @relation(fields: [productVariantId],references: [id])
}

model Orders{
id String  @id @default(uuid())
userId String //fk
user User @relation(fields: [userId],references: [id])
invoiceNumber String @unique @default(uuid())
subTotal Int
totalTax Int
grandTotal Int
shipmentMethod String
shipmentFee Int
shipmentReceipt String?
shipmentStatus OrderShipmentStatus
recipientName String
recipientPhone String
recipientAddress  String
recipientSubdistrict String
recipientDistrict String
recipientRegency String
recipientPostalCode String
paymentMethod String
paymentStatus OrderPaymentStatus
paymentProofImageUrl String?
notes String
source String
paidAt DateTime 
createdAt DateTime
status OrderStatus
orderItems OrderItems[]
}

model ProductVariant{
  id String @id @default(uuid())
  orderItems OrderItems[]
}

model User{
  id String @id @default(uuid())
  orders Orders[]
}

enum OrderShipmentStatus{ 
  PROCESSING 
  FINDING_COURIER    
  IN_TRANSIT
  ARRIVED
}
 
 enum OrderPaymentStatus{
WAITING_FOR_PAYMENT
WAITING_FOR_APPROVAL
APPROVED
REJECTED
EXPIRED
 }

 enum OrderStatus{
  PENDING_PAYMENT
  ON_PROCESS
  ON_SHIPMENT
  SUCCESS
  CANCELLED
 }

